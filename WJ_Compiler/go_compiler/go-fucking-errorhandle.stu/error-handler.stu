    参考资料:
        https://cloud.tencent.com/developer/article/1879728
        https://zh.wikipedia.org/wiki/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86
        https://cloud.tencent.com/developer/article/1524224

        2022/9/18
         
         -----------------------------why-------------------------------------------
            异常的本质是什么？( 小概率有可能发生的固定事件，这个世界没有对和错 )
                程序走到了一个不经常运行的分支中去了。
                    因为它是特殊的运行情况，说白了就是一个分支，本质就是调用返回了一个结果，
                    这个结果是需要处理的，通常这种异常处理的场景是统一的，可以抽象的。 -- 小概率事件就那么几个，不会很多情况。
                    所以说异常是值得封装的，因为异常的业务是比较固定的。

            为什么我觉得异常处理难？
                异常处理是很考验功底的，异常，是一个硬件和软件组合到一起处理的过程。
                    1.异常的前半生 异常的发生和捕捉，在硬件层面完成。
                    2.异常的后半生 异常的处理，其实是由软件来完成的。
            
        -------------------------------------------------------------------------------

        --------------------------------how-----------------------------------------------
            
            操作系统 有一个叫中断向量表 ( 异常代码表  ) --我猜是一个map ，标记了异常号码，和异常名称。

        启发：当应用软件学不下去的时候，看看操作系统，有可能不便秘了，操作系统学不下的时候看看硬件，有可能不便秘了。

        怎么进行程序的错误处理？
            
            （软件的异常处理，最后肯定也只能依赖硬件实现，无非是封装了一层让我们更容易使用）

            硬件出错：硬件的异常处理机制由cpu完成，这种机制支持错误检测，
                      在发生错误后将程序流跳转到专门的错误处理过程，(error handling routines)中。
                      并把异常前的状态存储在栈上。
            
            所以异常处理是不是依赖独立的硬件？
                                

            






