1. 默认最先执行的init函数.

2. 组合代替继承
----------------------------------------------
         
         type afd  struct{
                Fuck 
            }
            
            type Fuck struct{
                ss string 
            }

            func (fucking *Fuck) aa()  {
                var  a  Fuck
                a.ss :="fdaskhjfhkas"
            }

        func bb(){
            var fdsa afd
            fdsa.aa()
        }
----------------------------------------------------------------        

3.  函数名大写是包作用域

4. 结构内部特有的方法 
-------------------------------------------------------
方法只能放在file 的 toplevel 

package syntax

import "fmt"

type Pos struct {
	base      *PosBase
	line, col uint32
}


//返回结构体位置
func (pos Pos) Pos() Pos       { return pos }
//返回 位置是否被识别
func (pos Pos) IsKnown() bool  { return pos.line > 0 }
	return pos.Col()
}
------------------------多态--------------------------------------
func (pos Pos) String() string {
	rel := position_{pos.RelFilename(), pos.RelLine(), pos.RelCol()}
	abs := position_{pos.Base().Pos().RelFilename(), pos.Line(), pos.Col()}
	s := rel.String()
	if rel != abs {
		s += "[" + abs.String() + "]"
	}
	return s
}

// TODO(gri) cleanup: find better name, avoid conflict with position in error_test.go
type position_ struct {
	filename  string
	line, col uint
}

func (p position_) String() string {
	if p.line == 0 {
		if p.filename == "" {
			return "<unknown position>"
		}
		return p.filename
	}
	if p.col == 0 {
		return fmt.Sprintf("%s:%d", p.filename, p.line)
	}
	return fmt.Sprintf("%s:%d:%d", p.filename, p.line, p.col)
}
//-------------------------------------------------------------------


// A PosBase represents the base for relative position information:
// PosBase 代表了 基本的相对位置信息
// At position pos, the relative position is filename:line:col.
// 在Position pos 中 ,相对位置是文件名:line:col
type PosBase struct {
    // 位置
	pos       Pos
    //文件名
	filename  string
    //行.列
	line, col uint32
    //
	trimmed   bool // whether -trimpath has been applied
}
    //伪代码
    func (a *Posbase) aa() {
            var a  string 
            a = "fdas"
            Printf(a)
    }
----------------------------------------------------------------------

